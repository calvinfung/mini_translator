{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","i18n.js","index.js"],"names":["LegacyWelcomeClass","t","this","props","Component","Welcome","withTranslation","Page","useTranslation","i18n","changeLanguage","lng","console","log","className","src","logo","alt","type","onClick","href","target","rel","Loader","App","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","use","Backend","initReactI18next","init","fallbackLng","debug","backend","loadPath","interpolation","escapeValue","ReactDOM","render","document","getElementById"],"mappings":"wPAAe,MAA0B,iC,+BCKnCA,E,4JACJ,WACE,IAAQC,EAAMC,KAAKC,MAAXF,EACR,OAAO,6BAAKA,EAAE,kB,GAHeG,aAM3BC,EAAUC,cAAkBN,GAElC,SAASO,IACP,MAAoBC,cAATC,GAAX,EAAQR,EAAR,EAAWQ,MAELC,EAAiB,SAACC,GACtBF,EAAKC,eAAeC,GACpBC,QAAQC,IAAI,qBAAsBF,IAGpC,OACE,qBAAKG,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,cAACZ,EAAD,IACA,wBAAQa,KAAK,SAASC,QAAS,kBAAMT,EAAe,OAApD,gBAGA,wBAAQQ,KAAK,SAASC,QAAS,kBAAMT,EAAe,OAApD,gBAGA,wBAAQQ,KAAK,SAASC,QAAS,kBAAMT,EAAe,OAApD,gBAGA,wBAAQQ,KAAK,SAASC,QAAS,kBAAMT,EAAe,OAApD,gBAGA,mBACEI,UAAU,WACVM,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,8BAaR,IAAMC,EAAS,kBACb,sBAAKT,UAAU,MAAf,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,iDAIW,SAASO,IACtB,OACE,cAAC,WAAD,CAAUC,SAAU,cAAC,EAAD,IAApB,SACE,cAAClB,EAAD,MC7DN,IAYemB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sBCJdlB,IAGG0B,IAAIC,KAIJD,IAAIE,KAGJC,KAAK,CACJC,YAAa,KACbC,OAAO,EACPC,QAAS,CACPC,SAAU,gDAEZC,cAAe,CACbC,aAAa,KAGJnC,EAAf,EChBAoC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDtB,M","file":"static/js/main.2cc936a9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component, Suspense } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useTranslation, withTranslation } from \"react-i18next\";\n\nclass LegacyWelcomeClass extends Component {\n  render() {\n    const { t } = this.props;\n    return <h2>{t(\"greeting\")}</h2>;\n  }\n}\nconst Welcome = withTranslation()(LegacyWelcomeClass);\n\nfunction Page() {\n  const { t, i18n } = useTranslation();\n\n  const changeLanguage = (lng) => {\n    i18n.changeLanguage(lng);\n    console.log(\"Change language to\", lng);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Welcome />\n        <button type=\"button\" onClick={() => changeLanguage(\"en\")}>\n          en\n        </button>\n        <button type=\"button\" onClick={() => changeLanguage(\"de\")}>\n          de\n        </button>\n        <button type=\"button\" onClick={() => changeLanguage(\"cn\")}>\n          cn\n        </button>\n        <button type=\"button\" onClick={() => changeLanguage(\"ru\")}>\n          ru\n        </button>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nconst Loader = () => (\n  <div className=\"App\">\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    <div>loading...</div>\n  </div>\n);\n\nexport default function App() {\n  return (\n    <Suspense fallback={<Loader />}>\n      <Page />\n    </Suspense>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from \"i18next\";\nimport Backend from \"i18next-http-backend\";\nimport { initReactI18next } from \"react-i18next\";\ni18n\n  // load translation using http -> see /public/locales\n  // learn more: https://github.com/i18next/i18next-http-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: \"en\",\n    debug: true,\n    backend: {\n      loadPath: \"/mini_translator/locales/{{lng}}/{{ns}}.json\",\n    },\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n  });\nexport default i18n;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./i18n\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}